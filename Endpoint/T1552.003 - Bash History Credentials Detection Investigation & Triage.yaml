playbook_name: "T1552.003 - Bash History Credentials Detection: Investigation & Triage"
tactic: "Credential Access"
technique_id: "T1552.003"
technique_name: "Bash History"
description: >
  Detects sensitive credentials inadvertently stored in Bash history files which may be used by adversaries for credential access.

investigation_steps:
  - step_number: 1
    title: "Monitor Access to .bash_history"
    description: >
      Detect access to or exfiltration of the .bash_history file, particularly by unauthorized or suspicious users.
    checklist:
      - "Who accessed the .bash_history file?"
      - "Was the access local or remote (via SSH, etc.)?"
    data_sources:
      - "File system monitoring"
      - "Auditd (Linux Audit Logs)"

  - step_number: 2
    title: "Search for Credential-Like Entries"
    description: >
      Analyze the history file for usage of commands containing plaintext passwords or tokens.
    checklist:
      - "Are commands like ssh, curl, mysql used with credentials?"
      - "Do entries contain strings like 'password', 'token', 'secret'?"
    data_sources:
      - "File content inspection"
      - "Command line audit logs"

  - step_number: 3
    title: "Correlate with Lateral Movement"
    description: >
      Validate if any credentials found were used for SSH or internal pivoting.
    checklist:
      - "Are there subsequent SSH logins from same user/IP?"
      - "Is there evidence of privilege escalation?"
    data_sources:
      - "Authentication logs"
      - "Network activity logs"

triage_labels:
  - severity_levels:
      - "Low: Access to empty or non-sensitive bash history."
      - "Medium: Access to history with password or key material."
      - "High: Verified credential reuse or exfiltration."
  - confidence_levels:
      - "High: Password or token string found and reused."
      - "Medium: Suspicious access without confirmed sensitive strings."
      - "Low: Normal shell activity."

ioc_types:
  - "Access to ~/.bash_history"
  - "Credential strings in shell command history"
  - "Suspicious shell command patterns (e.g., curl with -u, mysql -p)"

queries/examples:
  - name: "Bash History Access with Suspicious Patterns"
    query: >
      file.path == "~/.bash_history" AND
      file.content MATCHES ("(?i)(password|token|apikey)")

  - name: "Detect Credential Use in Bash History"
    query: >
      command_line CONTAINS ("mysql -p", "curl -u", "sshpass")

automation_hooks:
  - "Alert if .bash_history accessed by suspicious process or user."
  - "Flag command lines with embedded credentials."
  - "Force rotation of exposed credentials."

analyst_guidance:
  - "Advise user to clear bash history and configure HISTCONTROL settings."
  - "Perform credential rotation if secrets exposed."
  - "Consider implementing shell wrapper or command auditing."

reference_links:
  - "https://attack.mitre.org/techniques/T1552/003/"
  - "https://www.cyberciti.biz
