playbook_name: "T1552 - Unsecured Credential Detection: Investigation & Triage"
tactic: "Credential Access"
technique_id: "T1552"
technique_name: "Unsecured Credentials"
description: >
  Detects the presence and access of unsecured credentials on endpoints or servers, often stored in plaintext or poorly secured files and locations.

investigation_steps:
  - step_number: 1
    title: "Detect Access to Known Insecure Credential Files"
    description: >
      Monitor access to files likely to contain plaintext credentials (e.g., .env, config.json, credentials.txt).
    checklist:
      - "Were any sensitive files accessed recently?"
      - "Who accessed these files and from which process?"
    data_sources:
      - "File access logs"
      - "EDR telemetry"

  - step_number: 2
    title: "Analyze File Content Patterns"
    description: >
      Search for insecure storage patterns such as passwords, access keys, or secrets stored in plain text.
    checklist:
      - "Does file content contain 'password=', 'access_key=', 'secret='?"
      - "Is the content readable by unauthorized users?"
    data_sources:
      - "File content inspection (EDR or Osquery)"
      - "File system access logs"

  - step_number: 3
    title: "Correlate with User Behavior"
    description: >
      Correlate file access events with user activity to detect possible abuse or exfiltration.
    checklist:
      - "Was the file accessed by a non-privileged or unexpected user?"
      - "Was there any network upload after the file access?"
    data_sources:
      - "Authentication logs"
      - "Network activity logs"

triage_labels:
  - severity_levels:
      - "Low: Access by known process with valid need."
      - "Medium: Suspicious access with plaintext secrets confirmed."
      - "High: Unauthorized access followed by exfiltration."
  - confidence_levels:
      - "High: Matched sensitive patterns in unsecured files."
      - "Medium: File accessed without process context."
      - "Low: File access by routine system process."

ioc_types:
  - "Access to .env, config.json, or credentials.txt"
  - "Presence of plaintext patterns in config files"
  - "Unusual process or user access to credential locations"

queries/examples:
  - name: "Sensitive File Access - Windows"
    query: >
      file_path IN ("*\\config.json", "*\\.env", "*/web.config", "*/credentials.txt") AND
      file_content MATCHES ("(?i)password=|access_key=|secret=")
  - name: "Sensitive File Access - Linux"
    query: >
      file.path IN ("/etc/passwd", "/etc/shadow", "*.env", "*.json") AND
      file.content MATCHES ("(?i)password=|access_key=|secret=")

automation_hooks:
  - "Alert on access to files containing hardcoded credentials."
  - "Automatically quarantine file or alert security team if unauthorized access."
  - "Schedule credential rotation upon detection."

analyst_guidance:
  - "Review which user or process accessed the credential file."
  - "Verify if these credentials are active and what services they belong to."
  - "Check if unauthorized users have accessed or exfiltrated the data."
  - "Rotate or revoke affected credentials immediately."
  - "Implement secrets management solutions to avoid plain text storage."

reference_links:
  - "https://attack.mitre.org/techniques/T1552/"
  - "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure"
  - "https://docs.microsoft.com/en-us/security/develop/devsecops-secrets-management"

review_cycle: "Monthly or after detection of plaintext credential access"